# import * from "./generated/prisma.graphql"

type SuccessMessage {
    message: String
}

type Mutation {
    
    #SIGN UP RESOLVER
    signup(email: String!, password: String!, name: String!): User!

    #SIGNIN RESOLVER 
    signin(email: String!, password: String!): User!

    #SIGNOUT RESOLVER
    signout: SuccessMessage

    #REQUEST RESET PASSWORD RESOLVER
    requestReset(email: String!): SuccessMessage

    #SET NEW PASSWORD RESOLVER
    resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!

    #ADD TO CART BOOK RESOLVER
    addToCart(id:ID!,quantity: Int!,type: String!): CartBook

    #REMOVE BOOK FROM CART RESOLVER
    removeFromCart(id:ID!): CartBook

    #CREATE ORDER RESOLVER
    createOrder(
        email: String
        number: String
        streetAddress: String
        city: String
        state: String
        postalCode: String
        couponCode: String
        isVookBalanceUsed: Boolean
        addressSetToDefault: Boolean

    ): Order!

    #CREATE POSTAL CODE
    createPostalCode(code:String!): PostalCode!

    #SUBMIT CONTACT US FORM RESOLVER
    submitContactUs(firstName: String, lastName: String, email: String, number: String, message: String): SuccessMessage!

    #CREATE BOOK CATEGORIES
    createCategory(name: String!): SuccessMessage!

    #CREATE BOOK TYPES
    createType(name: String!,category:String!): SuccessMessage!

    #CREATE BOOK PUBLISHER
    createPublisher(name:String!, type: String!, discount: Int!): SuccessMessage!

    #CREATE BOOK
    createBook(
        title: String!
        author: String!
        publisher: String!
        category: String!
        type: String!
        subject: String!
        edition: Int!
        quantity: Int!,
        detail: String!,
        description: String,
        mrp: Int!,
        tags: [String!],
        images: [String!],
        slug: String!,
        
    ): Book!

    #DELETE BOOK
    deleteBook(id:String!):SuccessMessage!

    #UPDATE BOOK
    updateBook(
        id: String!
        title: String!
        author: String!
        publisher: String!
        category: String!
        type: String!
        subject: String!
        edition: Int!
        quantity: Int!,
        detail: String!,
        description: String,
        mrp: Int!,
        tags: [String!],
        images: [String!],
        slug: String!
    ): SuccessMessage!

    

   
}

type Query {

    #GET USER
    me: User

    #GET ALL BOOKS (ADMIN)
    getAllBooks: [Book!]!

    #GET SINGLE BOOK (ADMIN)
    getSingleBook(id:String!): Book!

    #GET SINGLE BOOK BY SLUG (PUBLIC)
    getSingleBookBySlug(slug:String!):Book!

    #GET BOOKS BY CATEGORY (ADMIN, PUBLIC)
    getBooksByCategory(name: String!): Category!

    book(where: BookWhereUniqueInput!): Book!

    #GET ORDER BY ID OR ORDERID (ADMIN, PUBLIC)
    order(where: OrderWhereUniqueInput!): Order!

    #GET MY ORDERS
    getMyOrders:[Order!]!

    #GET ALL CATEGORIES
    getCategories: [Category!]!

    #GET ALL TYPES
    getTypes: [Type!]!

    #GET ALL PUBLISHER 
    getPublishers: [Publisher!]! 

    #GET ALL ORDERS QUERY RESOLVER (ADMIN)
    getAllOrders: [Order]!
}


